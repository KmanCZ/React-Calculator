{"version":3,"sources":["App.js","index.js"],"names":["displayContext","React","createContext","Calculator","className","Display","Button","big","children","useContext","display","setDisplay","upperDisplay","setUpperDisplay","lastOperation","setLastOperation","moveUp","compute","parseFloat","Error","otherButtons","prevState","toString","length","slice","parseInt","result","Infinity","equals","onClick","isNaN","App","useState","value","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a37f168.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nconst displayContext = React.createContext();\n\nfunction App() {\n  const [display, setDisplay] = useState(0);\n  const [upperDisplay, setUpperDisplay] = useState();\n  const [lastOperation, setLastOperation] = useState();\n  const value = {\n    display,\n    setDisplay,\n    upperDisplay,\n    setUpperDisplay,\n    lastOperation,\n    setLastOperation,\n  };\n\n  return (\n    <displayContext.Provider value={value}>\n      <Calculator />;\n    </displayContext.Provider>\n  );\n}\n\nfunction Calculator() {\n  return (\n    <div className=\"grid\">\n      <Display />\n      <Button big>AC</Button>\n      <Button>DEL</Button>\n      <Button>÷</Button>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Button>*</Button>\n      <Button>4</Button>\n      <Button>5</Button>\n      <Button>6</Button>\n      <Button>+</Button>\n      <Button>7</Button>\n      <Button>8</Button>\n      <Button>9</Button>\n      <Button>-</Button>\n      <Button>.</Button>\n      <Button>0</Button>\n      <Button big>=</Button>\n    </div>\n  );\n}\n\nfunction Button({ children, big }) {\n  const {\n    display,\n    setDisplay,\n    upperDisplay,\n    setUpperDisplay,\n    lastOperation,\n    setLastOperation,\n  } = useContext(displayContext);\n\n  const isNumber = () => {\n    return !isNaN(parseInt(children));\n  };\n\n  const addNumber = () => {\n    setDisplay((prevState) =>\n      prevState === 0 ? children : `${prevState}${children}`\n    );\n  };\n\n  const del = () => {\n    setDisplay((prevState) => {\n      if (prevState !== 0) {\n        if (prevState.toString().length > 1) {\n          return prevState.slice(0, -1);\n        } else {\n          return 0;\n        }\n      } else {\n        return prevState;\n      }\n    });\n  };\n\n  const dot = () => {\n    setDisplay((prevState) => {\n      if (prevState !== 0) {\n        return `${prevState}.`;\n      } else {\n        return prevState;\n      }\n    });\n  };\n\n  const moveUp = () => {\n    setUpperDisplay(display + \" \" + children);\n    setLastOperation(children);\n    setDisplay(0);\n  };\n\n  const compute = () => {\n    switch (lastOperation) {\n      case \"+\":\n        return parseFloat(upperDisplay) + parseFloat(display);\n      case \"-\":\n        return parseFloat(upperDisplay) - parseFloat(display);\n      case \"*\":\n        return parseFloat(upperDisplay) * parseFloat(display);\n      case \"÷\":\n        return parseFloat(upperDisplay) / parseFloat(display);\n\n      default:\n        throw new Error(\"Something went wrong!\");\n    }\n  };\n\n  const add = () => {\n    if (upperDisplay) {\n      setUpperDisplay(compute() + \" +\");\n      setLastOperation(\"+\");\n      setDisplay(0);\n    } else {\n      moveUp();\n    }\n  };\n\n  const subtract = () => {\n    if (upperDisplay) {\n      setUpperDisplay(compute() + \" -\");\n      setLastOperation(\"-\");\n      setDisplay(0);\n    } else {\n      moveUp();\n    }\n  };\n\n  const multipli = () => {\n    if (upperDisplay) {\n      setUpperDisplay(compute() + \" *\");\n      setLastOperation(\"*\");\n      setDisplay(0);\n    } else {\n      moveUp();\n    }\n  };\n\n  const divide = () => {\n    if (upperDisplay) {\n      if (parseInt(display) !== 0) {\n        setUpperDisplay(compute() + \" ÷\");\n        setLastOperation(\"÷\");\n        setDisplay(0);\n      } else {\n        setUpperDisplay();\n        setLastOperation();\n        setDisplay(0);\n      }\n    } else {\n      moveUp();\n    }\n  };\n\n  const equals = () => {\n    let result = compute();\n    if (result === Infinity) {\n      result = 0;\n    }\n    setDisplay(result);\n    setLastOperation();\n    setUpperDisplay();\n  };\n\n  const otherButtons = () => {\n    switch (children) {\n      case \"AC\":\n        setDisplay(0);\n        setUpperDisplay();\n        break;\n\n      case \"DEL\":\n        del();\n        break;\n\n      case \".\":\n        dot();\n        break;\n\n      case \"+\":\n        add();\n        break;\n\n      case \"-\":\n        subtract();\n        break;\n\n      case \"*\":\n        multipli();\n        break;\n\n      case \"÷\":\n        divide();\n        break;\n\n      case \"=\":\n        equals();\n        break;\n\n      default:\n        throw new Error(\"Something went wrong!\");\n    }\n  };\n\n  const clickHandler = () => {\n    isNumber() ? addNumber() : otherButtons();\n  };\n\n  return (\n    <button onClick={clickHandler} className={`button ${big && \"big-button\"}`}>\n      {children}\n    </button>\n  );\n}\n\nfunction Display() {\n  const { display, upperDisplay } = useContext(displayContext);\n\n  return (\n    <div className=\"output\">\n      <div className=\"previous-operand\">{upperDisplay}</div>\n      <div className=\"current-operand\">{display}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}